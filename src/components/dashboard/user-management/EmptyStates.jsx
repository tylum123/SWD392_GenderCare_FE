import React from "react";
import { Loader, Users, UserPlus, AlertTriangle } from "lucide-react";

const EmptyStates = ({
  loading,
  paginatedUsers,
  filteredUsers,
  searchTerm,
  filter,
  onAddUser,
  onReturnToFirstPage,
}) => {
  // Loading State
  if (loading) {
    return (
      <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center">
        <div className="mx-auto w-16 h-16 bg-gradient-to-br from-indigo-100 to-purple-100 rounded-full flex items-center justify-center mb-4">
          <Loader className="h-8 w-8 text-indigo-600 animate-spin" />
        </div>
        <h3 className="text-lg font-medium text-gray-900 mb-2">
          ƒêang t·∫£i danh s√°ch ng∆∞·ªùi d√πng...
        </h3>
        <p className="text-gray-500">
          Vui l√≤ng ch·ªù trong gi√¢y l√°t ƒë·ªÉ t·∫£i d·ªØ li·ªáu
        </p>
      </div>
    );
  }

  // No results for current page (but users exist)
  if (paginatedUsers.length === 0 && filteredUsers.length > 0) {
    return (
      <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-8 text-center">
        <div className="mx-auto w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mb-4">
          <AlertTriangle className="h-8 w-8 text-yellow-600" />
        </div>
        <h3 className="text-lg font-semibold text-gray-900 mb-3">
          Kh√¥ng c√≥ k·∫øt qu·∫£ cho trang hi·ªán t·∫°i
        </h3>
        <p className="text-gray-500 mb-6">
          C√≥ {filteredUsers.length} ng∆∞·ªùi d√πng ph√π h·ª£p nh∆∞ng kh√¥ng c√≥ ai ·ªü trang
          n√†y.
        </p>
        <button
          onClick={onReturnToFirstPage}
          className="inline-flex items-center space-x-2 bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors"
        >
          <span>V·ªÅ trang ƒë·∫ßu</span>
        </button>
      </div>
    );
  }

  // Complete empty state (no users at all)
  if (paginatedUsers.length === 0 && filteredUsers.length === 0) {
    return (
      <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center">
        <div className="mx-auto w-24 h-24 bg-gradient-to-br from-gray-100 to-gray-200 rounded-full flex items-center justify-center mb-6">
          <Users className="h-12 w-12 text-gray-400" />
        </div>
        <h3 className="text-xl font-semibold text-gray-900 mb-3">
          {searchTerm || filter !== "all"
            ? "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng"
            : "Ch∆∞a c√≥ ng∆∞·ªùi d√πng"}
        </h3>
        <p className="text-gray-500 mb-8 max-w-md mx-auto">
          {searchTerm || filter !== "all" ? (
            <>
              Kh√¥ng c√≥ ng∆∞·ªùi d√πng n√†o ph√π h·ª£p v·ªõi ti√™u ch√≠ t√¨m ki·∫øm "
              {searchTerm}"{filter !== "all" && ` v√† b·ªô l·ªçc "${filter}"`}. H√£y
              th·ª≠ ƒëi·ªÅu ch·ªânh b·ªô l·ªçc ho·∫∑c t·ª´ kh√≥a t√¨m ki·∫øm.
            </>
          ) : (
            "H·ªá th·ªëng ch∆∞a c√≥ ng∆∞·ªùi d√πng n√†o. H√£y th√™m ng∆∞·ªùi d√πng ƒë·∫ßu ti√™n ƒë·ªÉ b·∫Øt ƒë·∫ßu qu·∫£n l√Ω."
          )}
        </p>

        <div className="flex flex-col sm:flex-row gap-4 justify-center">
          {searchTerm || filter !== "all" ? (
            <>
              <button
                onClick={() => {
                  // Clear search and filter
                  window.location.reload(); // Simple way to reset all filters
                }}
                className="inline-flex items-center space-x-2 bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors"
              >
                <span>X√≥a b·ªô l·ªçc</span>
              </button>
              <button
                onClick={onAddUser}
                className="inline-flex items-center space-x-2 bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors"
              >
                <UserPlus className="h-4 w-4" />
                <span>Th√™m ng∆∞·ªùi d√πng</span>
              </button>
            </>
          ) : (
            <button
              onClick={onAddUser}
              className="inline-flex items-center space-x-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white px-6 py-3 rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-all shadow-md hover:shadow-lg"
            >
              <UserPlus className="h-5 w-5" />
              <span>Th√™m ng∆∞·ªùi d√πng ƒë·∫ßu ti√™n</span>
            </button>
          )}
        </div>

        {/* Additional help text */}
        {!searchTerm && filter === "all" && (
          <div className="mt-8 p-4 bg-blue-50 rounded-lg border border-blue-200">
            <p className="text-sm text-blue-800">
              üí° <strong>M·∫πo:</strong> Sau khi th√™m ng∆∞·ªùi d√πng, b·∫°n c√≥ th·ªÉ s·ª≠
              d·ª•ng c√°c b·ªô l·ªçc v√† t√¨m ki·∫øm ƒë·ªÉ qu·∫£n l√Ω danh s√°ch m·ªôt c√°ch hi·ªáu
              qu·∫£.
            </p>
          </div>
        )}
      </div>
    );
  }

  return null;
};

export default EmptyStates;
